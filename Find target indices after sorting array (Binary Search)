https://leetcode.com/problems/find-target-indices-after-sorting-array/solutions/1606564/4-different-ways-binary-search-counting-sort-time-complexities-explained/?orderBy=most_votes


class Solution {
public:
    vector<int> targetIndices(vector<int>& nums, int target) {
        sort(nums.begin(),nums.end());
        vector<int>ans;
        int i=0,j=nums.size()-1;
        while(i<=j){
            int mid=i+(j-i)/2;
            if(nums[mid]==target){
              ans.push_back(mid);
                int j=mid+1,z=mid-1;
             while(j<nums.size()&&nums[j]==target ){
                    ans.push_back(j);
                    j++;
                }
                while(z>=0&&nums[z]==target){
                  
                    ans.push_back(z);
                    z--;
                }
                break;
            }
            else if(nums[mid]>target){
                j=mid-1;
            }
            else{
                i=mid+1;
            }
        }
        if(ans.size()>1)
        sort(ans.begin(),ans.end());
        return ans;
    }
};
