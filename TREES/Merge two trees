
class Solution {
public:
    void fun(TreeNode* &root1, TreeNode* &root2){
        
        if(root2==NULL||root1==NULL) {
            if(root1==NULL)
            root1=root2;
            return;
        }
        if(root1&&root2)
        root1->val+=root2->val;
        
        fun(root1->left,root2->left);
        fun(root1->right,root2->right);
    }
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        fun(root1,root2);
        return root1;
    }
};


class Solution {
public:
    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {
        if ( t1 && t2 ) {
            TreeNode * root = new TreeNode(t1->val + t2->val);
            root->left = mergeTrees(t1->left, t2->left);
            root->right = mergeTrees(t1->right, t2->right);
            return root;
        } else {
            return t1 ? t1 : t2;
        }
    }
};
