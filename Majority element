class Solution {
public:
    int majorityElement(vector<int>& nums) {
        sort(nums.begin(),nums.end());
//given the condition, if any element appear more than n/2 times are called majority
//then we know our mid element means (n-1/2) is also our majority element if satisfied the given condition.
//simply return mid element.
        return nums[(nums.size()-1)/2];
    }
};
ALL APPROACHES:
https://leetcode.com/problems/majority-element/solutions/1787619/c-multiple-approaches-hashmaps-sorting-votingalgo/

LOGIC EXPLANATION (GREAT):
https://www.bing.com/videos/search?q=majority+element+leetcode&&view=detail&mid=70A8F4878D754969D77A70A8F4878D754969D77A&&FORM=VRDGAR&ru=%2Fvideos%2Fsearch%3Fq%3Dmajority%2Belement%2Bleetcode%26FORM%3DHDRSC3
