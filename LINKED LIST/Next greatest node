NEXT GREATEST NODE (USING MONOTONIC STACK)

//Good explanation with stack visualization
https://www.bing.com/videos/search?q=next+greater+element+in+linked+list&&view=detail&mid=9CEDEEA6A007400D8DD69CEDEEA6A007400D8DD6&&FORM=VRDGAR&ru=%2Fvideos%2Fsearch%3Fq%3Dnext%2520greater%2520element%2520in%2520linked%2520list%26qs%3DSC%26form%3DQBVR%26%3D%2525eManage%2520Your%2520Search%2520History%2525E%26sp%3D1%26pq%3Dnext%2520greater%2520element%2520link%26sc%3D10-25%26sk%3D%26cvid%3D0AFDF0ECF3C84D09B0762921E7F5A0D8%26ghsh%3D0%26ghacc%3D0%26ghpl%3D%26setmkt%3Den-in&setmkt=en-in

//Code that is understandable
https://www.bing.com/videos/search?q=next+greater+node+in+linked+list&&view=detail&mid=8120D7CC49826725B7248120D7CC49826725B724&&FORM=VRDGAR&ru=%2Fvideos%2Fsearch%3Fq%3Dnext%2Bgreater%2Bnode%2Bin%2Blinked%2Blist%26FORM%3DHDRSC3

Similar Questions( USING STACK)
Next Greater Element |  (Array)
https://leetcode.com/problems/next-greater-element-i/solutions/1043638/stack-c-code/?page=2
Algo explanation: 
https://www.bing.com/videos/search?q=next+greater+element+using+stack&&view=detail&mid=096608ED8534B4637ED4096608ED8534B4637ED4&&FORM=VRDGAR&ru=%2Fvideos%2Fsearch%3Fq%3Dnext%2Bgreater%2Belement%2Busing%2Bstack%26FORM%3DHDRSC3%26setmkt%3Den-in&setmkt=en-in
Next Greater Element || (Circular Array)

Daily Temperature:
class Solution {
public:
    vector<int> nge(vector<int>& nums) {
        stack<int> st;
        vector<int> ans(nums.size(), 0);
        for (int i = nums.size() - 1; i >= 0; i--)
        {
            while(!st.empty() && nums[i] >= nums[st.top()]) {
                st.pop();
            }
            if(!st.empty())
                ans[i] = st.top() - i;

            st.push(i);
        }
        return ans;
    }
    vector<int> dailyTemperatures(vector<int>& temperatures) {
        return nge(temperatures);
    }
};


NGE II:

    vector<int> nextGreaterElements(vector<int>& A) {
        int n = A.size();
        vector<int> stack, res(n, -1);
        for (int i = 0; i < n * 2; ++i) {
            while (stack.size() && A[stack.back()] < A[i % n]) {
                res[stack.back()] = A[i % n];
                stack.pop_back();
            }
            stack.push_back(i % n);
        }
        return res;
    }
    
    THE APPROACH FOR ALL THESE QUESTIONS EXPLAINED BY ADITYA VERMA:
    https://www.bing.com/videos/search?q=next+greatest+element&docid=603551086743268350&mid=1A5F12C0B896FF10E8801A5F12C0B896FF10E880&view=detail&FORM=VIRE
