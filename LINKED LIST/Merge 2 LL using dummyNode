/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(!l1 || !l2) return l1?l1:l2;

        ListNode* dummyNode = new ListNode(-1);
        ListNode* prv = dummyNode;

        while(l1 && l2){
            if(l1->val<l2->val){
                prv->next = l1;
                l1=l1->next;

            }
            else {
                prv->next = l2;
                l2=l2->next;

            }
            prv=prv->next;
        }
        prv->next = l1?l1:l2;
        return dummyNode->next;
    }
};
