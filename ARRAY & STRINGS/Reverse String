1. Using Stack
class Solution {
public:
    void reverseString(vector<char>& s) {
        stack<char> st;
        for(int i=0;i<s.size();i++) st.push(s[i]);
        s.clear();
        while(!st.empty()) {
            s.push_back(st.top());
            st.pop();
        }
    }
};
2. Recursion
class Solution {
public:
    void reverseString(vector<char>& s) {
        int i=0,j=s.size()-1;
        swapImp(s,i,j); 
    }
    void swapImp(vector<char>& s,int i,int j){
        if(i >= j) return;
        s[i]^=s[j];
        s[j]^=s[i];
        s[i]^=s[j];
        swapImp(s,++i,--j);
    }
};
3. Two Pointers
class Solution {
public:
    void reverseString(vector<char>& s) {
        int i = 0, j = s.size()-1;
        while (i<j) swap(s[i++], s[j--]); 
    }
};
