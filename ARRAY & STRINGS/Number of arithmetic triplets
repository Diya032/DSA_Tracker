https://leetcode.com/problems/number-of-arithmetic-triplets/solutions/2392136/c-easy-hashmap-solution-with-explanation/

class Solution {
public:
    int arithmeticTriplets(vector<int>& nums, int diff) {

        unordered_map<int,int>mp;
        int cnt=0;

        for(int i=0;i<nums.size();i++){
            mp[nums[i]]=1;
        }

        for(int i=0;i<nums.size();i++){
            if(mp[nums[i]-diff] && mp[nums[i]+diff]) cnt++;
        }
        return cnt;
    }
};


class Solution {
public:
    int arithmeticTriplets(vector<int>& nums, int diff) {
        
        int n = nums.size();
        
        // insert all the elements into the set
        
        unordered_set<int> s;
        
        for(int i = 0; i < n; i++)
        {
            s.insert(nums[i]);
        }
        
        int count = 0;
        
        // iterate over array
        
        for(int i = 0; i < n - 2; i++)
        {
            int a = nums[i];
            
            int b = nums[i] + diff;
            
            int c = nums[i] + 2 * diff;
            
            // if b, c are present in set then sequence is found
            
            if(s.count(b) && s.count(c))
                count++;
        }
        
        return count;
    }
};
