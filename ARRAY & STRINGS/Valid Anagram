https://stackoverflow.com/questions/37202662/what-is-the-meaning-about-s-i-si-a

WHY DO WE DO s[i]-'a'? ------^ above link

https://leetcode.com/problems/valid-anagram/solutions/3145768/c-easiest-beginner-friendly-sol-hash-table-o-n-time-and-o-1-space/

class Solution {
public:
    bool isAnagram(string s, string t) {
        sort(s.begin(), s.end());
        sort(t.begin(), t.end());
        return s == t; 
    }
};

IN C++ STRINGS ARE MUTABLE...THERE IS MORE UNDERSTANDING TO IT...CAN READ ABOUT IT WHEN YOU HAVE TIME. 


class Solution {
public:
    bool isAnagram(string s, string t) {
        unordered_map<char,int>mp1,mp2;

        if(s.size()!= t.size()) return false;

        for(int i=0;i<s.size();i++){
            mp1[s[i]]++;
            mp2[t[i]]++;
        }
        if(mp1==mp2) return true;
        return false;

        
    }
};

class Solution {
public:
    bool allZeroes(vector<int>& count) {
        for (int i = 0; i < 26; i++) {
            if(count[i] != 0)
                return false;
        }
        return true;
    }
    bool isAnagram(string s, string t) {
        int n = s.length();
        int m = t.length();
        if(n != m)
            return false;
        vector<int> count(26, 0);
        for (int i = 0; i < n; i++) {
            count[s[i] - 'a']++;
            count[t[i] - 'a']--;
        }
        if(allZeroes(count) == false)
            return false;
        return true;
    }
};

////MOST OPTIMIZED APPROACH FOUND

class Solution {
public:
    bool isAnagram(string s, string t) {

            vector<int>mp(26,0);
        if(s.size()!=t.size())return false;
        for(int i=0;i<s.size();i++){
           mp[s[i]-'a']++; 
           mp[t[i]-'a']--;
        }
        for(int i=0;i<26;i++){
            if(mp[i]!=0)return false;
        }
        return true;  
    }
};
