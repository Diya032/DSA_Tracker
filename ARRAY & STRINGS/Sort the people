int n = heights.size();
        map <int, string> mpp;

        for(int i = 0; i < names.size(); i++)
            mpp[heights[i]] = names[i];

        vector <string> res;
        for(auto x: mpp)
            res.push_back(x.second);

        reverse(res.begin(), res.end());
        return res;            

/////////////////////////////////////////////////


map<int,string,greater<int>> mp;
        int size = names.size();
        for(int i = 0 ; i < size ; i++)
            mp[heights[i]] = names[i];
        vector<string> ans;
        for(auto i : mp)
            ans.push_back(i.second);
        return ans;
        
        //////////////////////////////////
        
        int n = heights.size();
        vector<pair<int, int>> arr(n);
        for (int i = 0; i < n; ++i) {
            arr[i] = {-heights[i], i};
        }
        sort(arr.begin(), arr.end());
        vector<string> ans(n);
        for (int i = 0; i < n; ++i) {
            ans[i] = names[arr[i].second];
        }
        return ans; 
